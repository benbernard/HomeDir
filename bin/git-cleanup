#!/usr/bin/perl

sub run_command {
  system(@_);

  if ($?) {
    warn "Error running " . join(' ', @_) . "\n";
    exit 1;
  }
}

my $current_branch = `git branch | sed -n '/\* /s///p'`;

if ($current_branch =~ m/^\(detached from (\S+)\)$/) {
  $current_branch = $1;
}

chomp $current_branch;

system('git diff --quiet HEAD');
my $is_dirty = $?;

if ($is_dirty) {
  print "WARNING: Found a dirty working tree, stashing\n";
  run_command('git stash');
}

print "Checking out Master\n";
run_command('git checkout master');

print "Deleting any merged branches\n";
my @branches = `git branch --merged master | grep -v "\* master"`;
chomp @branches;

foreach my $branch (@branches) {
  $branch =~ s/^\s*(.*)\s*$/$1/;
  next if ($branch eq 'master');

  print "Removing branch $branch\n";
  run_command("git branch -d $branch");
  run_command("git push origin :refs/heads/$branch");
}

print "\n";
print "\n";
print "Cleaning up remote refs\n";
run_command('git fetch --all -p');


run_command(qw(git checkout), $current_branch);
if ($is_dirty) {
  print "Restoring working stree from stash\n";
  run_command('git stash pop');
}
