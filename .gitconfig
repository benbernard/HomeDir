# vim: set filetype=gitconfig :

[diff]
  color = auto
  rename = copy

[pager]
  color = true
  grep = false

[status]
  color = true

[color]
  ui = true
  interactive = always
  diff = true

[color "diff"]
  whitespace = red reverse

[core]
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
  pager = less -XRMSIF
  excludesfile = ~/.gitignore_global

[alias]
  # These I acutally use
  br = branch
  co = checkout
  l = log --oneline --no-merges
  s = ! git status -s | awk '{print $2}'

  # These I generally don't
  st = status -uno
  ci = commit
  df = diff
  lg = log -p
  lgfiles = log --name-only --no-merges
  lol = log --graph --decorate --pretty=oneline --abbrev-commit --no-merges
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all --no-merges
  ls = ls-files
  lf = log --no-merges --oneline --
  log-file = log --no-merges --
  alog = log --date-order --all --graph --format=\"%C(green)%H%Creset %C(yellow)%an%Creset %C(blue bold)%ad%Creset %C(red bold)%d%Creset%s\"
  lfp = log --oneline --first-parent

  # Assume-unchanged aliases
  au = update-index --assume-unchanged
  nau = update-index --no-assume-unchanged
  lsau = !git ls-files -v | grep "^[[:lower:]]"

  # Testing these
  agrep = grep-of-doom
  cp = cherry-pick
  mt = mergetool
  # grep=use-agrep

[difftool]
    prompt = no

[gc]
  auto = 0
  reflogExpire = never
  reflogExpireUnreachable = never

[merge]

[merge]
	conflictstyle = diff3
  keepBackup = false
  keepTemporaries = false
  tool = p4merge

[mergetool "p4merge"]
  cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  trustExitCode = false

[hub]

[user]
  name = Ben Bernard
  email = github@benjaminbernard.com

[push]
  default = current

[mergetool]
  keepBackup = false

[filter "media"]
  clean = git-media-clean %f
  smudge = git-media-smudge %f

# These cause github origins to pull down refs for the pull requests (by number) as well
# Better to put these in individual repo config's
# [remote "origin"]
#   fetch = +refs/pull/*/head:refs/remotes/origin/pr/*
# [remote "team"]
#   fetch = +refs/pull/*/head:refs/remotes/team/pr/*

[man]
  viewer = run-help

[man "run-help"]
  cmd = run-githelp
