#!/usr/bin/perl

$| = 1;

use strict;
use warnings;

use File::Temp ('tempdir');

use Amling::Git::Utils;

# TODO: completely new files (easy enough to add then diff for now)?

my $root = Amling::Git::Utils::find_root();

my %metadata;
{
    local $ENV{'GIT_PAGER'} = "";
    local $ENV{'GIT_EXTERNAL_DIFF'} = "git-diff-cmd-show-341";
    open(my $fh, "-|", "git", "diff", @ARGV) || die "Cannot open file list";
    while(my $line = <$fh>)
    {
        chomp $line;
        if($line =~ /^([^ ]*) ([^ ]*) (.*)$/)
        {
            $metadata{$3} = [$1, $2];
        }
    }
    close($fh) || die "Cannot close file list";
}
{
    local $ENV{'GIT_PAGER'} = "";
    local $ENV{'GIT_EXTERNAL_DIFF'} = "git-diff-cmd-show-671";
    open(my $fh, "-|", "git", "diff", "--cached", @ARGV) || die "Cannot open file list (2)";
    while(my $line = <$fh>)
    {
        chomp $line;
        if($line =~ /^([^ ]*) ([^ ]*) (.*)$/)
        {
            $metadata{$3} = [$1, $2];
        }
    }
    close($fh) || die "Cannot close file list (2)";
}

my @paths = sort(keys(%metadata));

my $tempdir = tempdir('CLEANUP' => 1);
my $uniq = 0;

for my $path (@paths)
{
    my $metadata = $metadata{$path} || die "Bad path $path (not in diff?)";
    my ($sha1, $mode) = @$metadata;
    if($sha1 !~ /^[0-9a-f]{40}$/)
    {
        die "Hash for $path bad ($sha1)";
    }
    my $mode_arg;
    if($mode =~ /^10(0...)$/)
    {
        $mode_arg = $1;
    }
    else
    {
        die "Mode for $path bad ($mode)";
    }
    my $tmpfn = $tempdir . "/" . (++$uniq);
    if($path =~ /^.*\/[^.\/]*(\.[^\/]*)$/)
    {
        $tmpfn .= $1;
    }
    open(my $rfh, "-|", "git", "cat-file", "blob", $sha1) || die "Cannot open git cat-file $sha1";
    open(my $fh, ">", $tmpfn) || die "Cannot open $tmpfn";
    while(my $line = <$rfh>)
    {
        print $fh $line;
    }
    close($fh) || die "Cannot close $tmpfn";
    close($rfh) || die "Cannot close git cat-file $sha1";
    system("chmod", $mode_arg, $tmpfn) && die "Could not chmod $tmpfn";
    system(($ENV{"DIFFEDITOR"} || "vimdiff"), $tmpfn, $root . "/" . $path);

    my @stat = stat($tmpfn);
    @stat || die "Cannot stat $tmpfn";
    my $new_mode = sprintf("%o", $stat[2]);

    open(my $hfh, "-|", "git", "hash-object", "-w", $tmpfn) || die "Cannot open hash new file $tmpfn";
    my $new_sha1 = <$hfh>;
    chomp $new_sha1;
    if(!$new_sha1)
    {
        die "Cannot read new hash";
    }
    close($hfh) || die "Cannot close hash new file $tmpfn";

    if($new_sha1 !~ /^[0-9a-f]{40}$/)
    {
        die "New hash for $path bad ($new_sha1)";
    }

    if($new_sha1 eq $sha1 && $new_mode eq $mode)
    {
        print "Skipping unchanged $path\n";
        next;
    }

    print "Updating changed $path\n";
    system("git", "update-index", "--add", "--replace", "--cacheinfo", $new_mode, $new_sha1, $path) && die "Could not update index for $path";
}
