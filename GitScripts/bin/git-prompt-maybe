#!/usr/bin/perl

$| = 1;

use strict;
use warnings;

use Amling::Git::Utils;

my $root = Amling::Git::Utils::find_root(1);
if(!$root)
{
    bail("Cannot find root?");
}

open(my $head_fh, "<", "$root/.git/HEAD") || bail("Cannot open HEAD: $!");
my $head = <$head_fh> || bail("Read nothing from HEAD?");
chomp $head;
if($head =~ s/^ref: //)
{
    if($head =~ s/^refs\///)
    {
        if($head =~ s/^heads\///)
        {
            # great
        }
        elsif($head =~ s/^remotes\///)
        {
            # great
        }
        else
        {
            # great enough
        }
    }
    print " $head\n";
}
elsif($head =~ /^[0-9a-f]{40}$/)
{
    # I'm not positive I like this, it's somewhat expensive (up to around .1s in HH)
    open(my $log_fh, "-|", "git", "log", "-1", "--pretty=raw") || bail("Cannot open git log -1: $!");
    my $rev = undef;
    while(my $l = <$log_fh>)
    {
        chomp $l;
        if($l =~ /^    git-svn-id: .*\/([^ \/]*) [^ ]*$/)
        {
            $rev = $1;
        }
    }
    if(defined($rev))
    {
        print " $rev\n";
    }
    else
    {
        my $short = substr($head, 0, 12);
        print " $short\n";
    }
}
else
{
    bail("Unknown HEAD: $head");
}
close($head_fh) || bail("Cannot close HEAD: $!");

sub bail
{
    my $msg = shift;

    #die $msg;
    exit 0;
}
